(cl:in-package #:sicl-boot-phase-6)

(defun satiate-generic-functions-1 (e3 e4 e5)
  (let ((client (env:client e5)))
    (do-all-symbols (symbol)
      (when (and (null (env:special-operator client e5 symbol))
                 (null (env:macro-function client e5 symbol))
                 (env:fboundp client e5 symbol))
        (let ((function (env:fdefinition client e5 symbol)))
          (when (and (typep function 'sicl-boot::header)
                     (eq (slot-value function 'sicl-boot::%class)
                         (env:find-class client e3 'standard-generic-function)))
            (funcall (env:fdefinition client e4 'sicl-clos::satiate-generic-function)
                     function))))
      (when (env:fboundp client e5 `(setf ,symbol))
        (let ((function (env:fdefinition client e5 `(setf ,symbol))))
          (when (and (typep function 'sicl-boot::header)
                     (eq (slot-value function 'sicl-boot::%class)
                         (env:find-class client e3 'standard-generic-function)))
            (funcall (env:fdefinition client e4 'sicl-clos::satiate-generic-function)
                     function)))))))

(defun boot (boot)
  (format *trace-output* "Start phase 6~%")
  (with-accessors ((e3 sicl-boot:e3)
                   (e4 sicl-boot:e4)
                   (e5 sicl-boot:e5))
      boot
    (copy-classes e4 e5)
    (load-source-file "CLOS/satiation.lisp" e4)))
